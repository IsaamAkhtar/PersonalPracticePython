Problem: Find First Unique Character in a String

Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example:
Input:
s = "leetcode"
Output:
0

Input:
s = "loveleetcode"
Output:
2

Input:
s = "aabb"
Output:
-1

def first_uniq_char(s: str) -> int:
    // Create a dictionary to count occurrences of each character
    char_count = {}
    
    // Count occurrences of each character
    for char in s:
        //Here, the .get function is checks if the character 'char' is already a key in the dictionary. If it is found, its value is incremented by 1, if not,
          0 is automatically returned and the value is still incremented. 
        char_count[char] = char_count.get(char, 0) + 1
    
    // Iterate over the string with enumerate to find the first unique character
    for index, char in enumerate(s):
        if char_count[char] == 1:
            return index
    
    return -1
